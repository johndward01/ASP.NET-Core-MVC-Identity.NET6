<div class="title">
    <p class="display-6 text-center">Three.js Demo</p>
    <p class="text-center">Manually refresh the page if the grid is skewed in appearance</p>
</div>

<script src="~/Three_js/three.min.js"></script>
<script>
    const scene = new THREE.Scene();
    const renderer = new THREE.WebGLRenderer();

    let width = window.innerWidth;
    let height = window.innerHeight;
    const camera = new THREE.PerspectiveCamera(125, width / height, 0.1, 1000);

    const size = 100;
    const divisions = 50;
    const gridHelper = new THREE.GridHelper(size, divisions);

    const geometry = new THREE.BoxGeometry(1, 1, 1);
    const material = new THREE.MeshBasicMaterial({ color: 0x0000ff });
    const cube = new THREE.Mesh(geometry, material);


    function animate() {
        requestAnimationFrame(animate);

        cube.rotation.x += 0.01;
        cube.rotation.y += 0.01;

        sphere.rotation.x += 0.01;
        sphere.rotation.y += 0.01;

        renderer.render(scene, camera);
    }

    for (let i = 0; i < 6; i++) {
        const geometry = new THREE.BoxGeometry(1, 1, 1);
        const material = new THREE.MeshBasicMaterial({ color: 0x0000ff });
        const cube = new THREE.Mesh(geometry, material);

        cube.position.z = -i * i / 4;
        cube.position.x = i * i;
        cube.position.y = i * i;

        cube.rotation.x += i;
        cube.rotation.z += i;

        scene.add(cube);
    }


    renderer.setSize(window.innerWidth - 50, window.innerHeight - 125);
    document.body.appendChild(renderer.domElement)
    camera.position.z = 5;
    gridHelper.rotation.x = Math.PI / 8;
    cube.rotation.x += 0.50;
    cube.rotation.y -= 0.25;
    scene.add(gridHelper);

    renderer.render(scene, camera)

    window.addEventListener('resize', onWindowResize, false)
    function onWindowResize() {
        camera.aspect = window.innerWidth / window.innerHeight;
        camera.updateProjectionMatrix();
        renderer.setSize(window.innerWidth, window.innerHeight)
        render();
    }




        /// SPHERE
        //const geo1 = new THREE.SphereGeometry(.5, 10, 10);
        //const mat1 = new THREE.MeshBasicMaterial({ color: 0xccc });
        //const sphere = new THREE.Mesh(geo1, mat1);
        //sphere.position.x = 1;
        //scene.add(sphere);
</script>


